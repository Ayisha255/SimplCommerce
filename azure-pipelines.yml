trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: 'sdk'
      version: '8.0.100'

  - script: dotnet build ./SimplCommerce.sln
    displayName: 'dotnet build'

  - task: DotNetCoreCLI@2
    displayName: 'run tests'
    inputs:
      command: test
      arguments: '--logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=[xunit.*]*%2c[System.*]*'
      projects: 'test/**/*.csproj'
      nobuild: true

  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . dotnet-reportgenerator-globaltool
      displayName: Install ReportGenerator tool

  - script: ./reportgenerator "-reports:$(Build.SourcesDirectory)/test/**/coverage.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)/coverlet/reports" "-reporttypes:HtmlInline_AzurePipelines;Cobertura"
    displayName: Create reports

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml  

  # ðŸ”¹ Snyk Security Scan Step (Added)
  - task: SnykSecurityScan@1
    displayName: 'Snyk Security Scan'
    inputs:
      serviceConnectionEndpoint: 'SNYK_SERVICE_CONNECTION_NAME'
      testType: 'app'
      monitorWhen: 'always'
      failOnIssues: true
      severityThreshold: 'high'

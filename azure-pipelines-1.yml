trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# ðŸ”¹ Install NuGet
- task: NuGetToolInstaller@1

# ðŸ”¹ Restore Dependencies
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# ðŸ”¹ Build Solution
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# ðŸ”¹ Run Tests with Code Coverage
- task: VSTest@2
  displayName: 'Run Tests with Code Coverage'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    codeCoverageEnabled: true

# ðŸ”¹ Install ReportGenerator
- task: DotNetCoreCLI@2
  displayName: 'Install ReportGenerator Tool'
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool

# ðŸ”¹ Generate Code Coverage Report
- script: |
    .\reportgenerator -reports:$(Build.SourcesDirectory)\**\TestResults\**\*.coveragexml -targetdir:$(Build.SourcesDirectory)\coverlet\reports -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
  displayName: 'Generate Code Coverage Report'

# ðŸ”¹ Publish Code Coverage Report
- task: PublishBuildArtifacts@1
  displayName: 'Upload Code Coverage Report'
  inputs:
    pathToPublish: $(Build.SourcesDirectory)\coverlet\reports
    artifactName: 'CodeCoverageReport'

# ðŸ”¹ Snyk Security Scan
- task: SnykSecurityScan@1
  displayName: 'Run Snyk Security Scan'
  inputs:
    serviceConnectionEndpoint: 'Snyk-Security-Scanner'
    testType: 'app'
    monitorWhen: 'always'
    failOnIssues: false
    additionalArguments: '--json > snyk-report.json'

- script: cat snyk-report.json
  displayName: 'Display Snyk Report in Logs'

# ðŸ”¹ Upload Snyk Report as an Artifact
- task: PublishBuildArtifacts@1
  displayName: 'Upload Snyk Report'
  inputs:
    pathToPublish: snyk-report.json
    artifactName: 'SnykReport'
